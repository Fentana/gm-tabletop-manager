if(window.CanvasRenderingContext2D){CanvasRenderingContext2D.prototype.reset=function(){this.translate(0,0);this.fillStyle="white";this.strokeStyle="white"};CanvasRenderingContext2D.prototype.roundedRect=function(k,i,b,l,h,a,e,g,d){if(!k||!i||!b||!l){return true}if(!h){h=5}if(!d){d=1}var j=k-(b/2);var m=k+(b/2);var f=i-(l/2);var c=i+(l/2);this.save();this.reset();this.beginPath();this.moveTo(j+h,f);this.lineTo(m-h,f);this.quadraticCurveTo(m,f,m,f+h);this.lineTo(m,c-h);this.quadraticCurveTo(m,c,m-h,c);this.lineTo(j+h,c);this.quadraticCurveTo(j,c,j,c-h);this.lineTo(j,f+h);this.quadraticCurveTo(j,f,j+h,f);if(a){this.globalAlpha=d;this.fillStyle=a;this.fill()}if(e){this.lineWidth=(g)?g:1;this.strokeStyle=e;this.stroke()}this.closePath();this.restore()};CanvasRenderingContext2D.prototype.ellipse=function(k,j,c,l,a,g,i,f){if(!k||!j||!c||!l){return true}if(!f){f=1}var d=k-(c/2);var h=k+(c/2);var e=j-(l/2);var b=j+(l/2);this.save();this.reset();this.beginPath();this.moveTo(k,e);this.bezierCurveTo(h,e,h,b,k,b);this.bezierCurveTo(d,b,d,e,k,e);if(a){this.globalAlpha=f;this.fillStyle=a;this.fill()}if(g){this.lineWidth=(i)?i:1;this.strokeStyle=g;this.stroke()}this.closePath();this.restore()};CanvasRenderingContext2D.prototype.circularArc=function(j,g,f,b,h,a,d,e,k,i,c){if(!j||!g||!f){return true}if(!c){c=1}if(!b){b=0}if(!h){h=Math.PI}if(!i){i=false}this.save();this.reset();this.beginPath();this.arc(j,g,f,b,h,i);this.globalAlpha=c;if(k){this.closePath()}if(a){this.fillStyle=a;this.fill()}if(d){this.lineWidth=(e)?e:1;this.strokeStyle=d;this.stroke()}this.closePath();this.restore()};CanvasRenderingContext2D.prototype.lightbulb=function(l,j,n,a,d,f,c,h){if(!l||!j||!n){return true}var g=n/3;var i=n/2;var m=l+n;var k=l-n;var e=j-n;var b=j+n;if(!c){c=1}this.save();this.reset();this.beginPath();this.moveTo(m,j);this.bezierCurveTo(m,j+g,l+i,j+i,l+i,b);this.lineTo(l-i,b);this.bezierCurveTo(l-i,j+i,k,j+g,k,j);this.bezierCurveTo(k,j-i,l-i,e,l,e);this.bezierCurveTo(l+i,e,m,j-i,m,j);if(a){this.globalAlpha=c;this.fillStyle=a;this.fill()}if(d){this.lineWidth=(f)?f:1;this.strokeStyle=d;this.stroke()}this.closePath();this.restore();if(h){this.roundedRect(l,b+(g/2),n,g,5,h,d,f,c)}}}var Shapies=(function(c){var b=(function(){var d;function e(){var g=24;var n={};var l=0;var j=function(){var o=c.document.createElement("canvas");o.setAttribute("id","Shapies");o.setAttribute("style","border: 5px solid black;");o.setAttribute("width",500);o.setAttribute("height",500);c.document.body.insertBefore(o,c.document.body.firstChild);return o};var k=(c.document.getElementById("Shapies")!==null)?c.document.getElementById("Shapies"):j();k.getContext("2d").font="bold 12px sans-serif";k.getContext("2d").fillStyle="black";var i=function(){try{k.getContext("2d").save();k.getContext("2d").setTransform(1,0,0,1,0,0);k.getContext("2d").clearRect(0,0,k.width,k.height);k.getContext("2d").restore();return true}catch(o){console.log("ERROR - CANVAS: clear() hit an error");console.log(o.name);console.log(o.message)}return false};var m=function(){i();for(var o in n){try{n[o].draw(k.getContext("2d"))}catch(p){console.log("ERROR - CANVAS: draw() hit an error");console.log(p.name);console.log(p.message)}}};var f=function(){if(l===0){l=setInterval(m,1000/g);return true}return false};var h=function(){if(l>0){clearInterval(l);l=0;return true}return false};return{fps:function(o){if((typeof o=="number")&&(o!==null)){return(g=o)}return g},start:f,stop:h,addActor:function(o,p){if((typeof p!=="undefined")&&(p!==null)){return(n[""+o]=p)}return false},deleteActor:function(o){if(n.hasOwnProperty(o)){return(delete n[o])}return false},midpoint:function(){return[k.width/2,k.height/2]},width:function(o){if((typeof o!=="undefined")&&(o!==null)){return(k.width=o)}return k.width},height:function(o){if((typeof o!=="undefined")&&(o!==null)){return(k.height=o)}return k.height},context:function(){return k.getContext("2d")}}}return{getInstance:function(){if(!d){d=e()}return d}}})();function a(){function h(){this.text="filler";this.point=[0,0];this.draw=function(j){try{j.fillText(this.text,this.point[0],this.point[1]);return true}catch(k){console.log("ERROR - TEXT: draw() hit an error");console.log(k.name);console.log(k.message)}return false}}function i(){this.colour="clear";this.border="clear";this.radius=10;this.point=[0,0];this.length=[5,10];this.lineWidth=1;this.draw=function(j){try{j.roundedRect(this.point[0],this.point[1],this.length[0],this.length[1],this.radius,this.colour,this.border,this.lineWidth,this.alpha);return true}catch(k){console.log("ERROR - RoundedRectangle: draw() hit an error");console.log(k.name);console.log(k.message)}return false}}function e(){this.enclosed=false;this.colour="clear";this.border="clear";this.angles=[0,2*Math.PI];this.radius=10;this.point=[0,0];this.lineWidth=1;this.direction=false;this.draw=function(j){try{j.circularArc(this.point[0],this.point[1],this.radius,this.angles[0],this.angles[1],this.colour,this.border,this.lineWidth,this.enclosed,this.direction);return true}catch(k){console.log("ERROR - ARC: draw() hit an error");console.log(k.name);console.log(k.message)}return false}}function f(){this.colour="clear";this.border="clear";this.lengths=[5,10];this.point=[0,0];this.lineWidth=1;this.alpha=1;this.draw=function(j){try{j.ellipse(this.point[0],this.point[1],this.lengths[0],this.lengths[1],this.colour,this.border,this.lineWidth,this.alpha);return true}catch(k){console.log("ERROR - ELLIPSE: draw() hit an error");console.log(k.name);console.log(k.message)}return false}}function g(){this.colour="clear";this.border="clear";this.base="clear";this.size=5;this.point=[0,0];this.lineWidth=1;this.alpha=1;this.draw=function(j){try{j.lightbulb(this.point[0],this.point[1],this.size,this.colour,this.border,this.lineWidth,this.alpha,this.base);return true}catch(k){console.log("ERROR - LIGHTBULB: draw() hit an error");console.log(k.name);console.log(k.message)}return false}}function d(){this.colour="yellow";this.eyecolour="blue";this.eyeborder="black";this.smilecolour="red";this.smileborder="black";this.border="black";this.lineWidth=1;this.radius=100;this.point=[0,0];this.alpha=1;this.attack=function(){alert("ATTACK!")};this.heal=function(){alert("HEAL!")};this.move=function(){alert("MOVE!")};this.left=function(){this.point[0]=this.point[0]-(this.radius*0.25)};this.right=function(){this.point[0]=this.point[0]+(this.radius*0.25)};this.up=function(){this.point[1]=this.point[1]-(this.radius*0.25)};this.down=function(){this.point[1]=this.point[1]+(this.radius*0.25)};this.draw=function(k){try{k.circularArc(this.point[0],this.point[1],this.radius,0,2*Math.PI,this.colour,this.border,this.lineWidth,false,false,this.alpha);for(var j=0;j<2;j++){var m=(j!==1)?this.point[0]+(this.radius/2):this.point[0]-(this.radius/2);k.ellipse(m,this.point[1]-(this.radius/2),(this.radius/5),(this.radius/4),this.eyecolour,this.eyeborder,this.lineWidth,this.alpha)}k.circularArc(this.point[0],this.point[1],this.radius/2,0,Math.PI,this.smilecolour,this.smileborder,this.lineWidth,true,false,this.alpha);return true}catch(l){console.log("ERROR - SMILIE: draw() hit an error");console.log(l.name);console.log(l.message)}return false}}return{create:function(k,j){switch(k){case"text":return new h();case"roundedrectangle":return new i();case"lightbulb":return new g();case"arc":return new e();case"ellipse":return new f();case"smilie":return new d()}return false}}}return{canvas:function(){return b.getInstance()},actors:new a()}})(window);